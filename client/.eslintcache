[{"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\index.js":"1","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\App.js":"2","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Navbar\\Navbar.js":"3","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\Auth.js":"4","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Home\\Home.js":"5","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Navbar\\styles.js":"6","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\styles.js":"7","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\input.js":"8","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\index.js":"9","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Home\\styles.js":"10","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\project.js":"11","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Project.js":"12","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\styles.js":"13","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Tasks\\Tasks.js":"14","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Tasks\\styles.js":"15","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\AddTasks\\AddTask.js":"16","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\AddTasks\\styles.js":"17","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\task.js":"18","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\UpdateProject\\UpdateProject.js":"19","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\UpdateProject\\styles.js":"20","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\DeleteProject\\DeleteProject.js":"21","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Employes\\Employe.js":"22","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Employes\\styles.js":"23","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Todos\\Todos.js":"24","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Todos\\styles.js":"25","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Chat\\Chat.js":"26"},{"size":432,"mtime":1611737051894,"results":"27","hashOfConfig":"28"},{"size":912,"mtime":1613544236887,"results":"29","hashOfConfig":"28"},{"size":2824,"mtime":1613294810790,"results":"30","hashOfConfig":"28"},{"size":3861,"mtime":1612157660882,"results":"31","hashOfConfig":"28"},{"size":6875,"mtime":1613140901200,"results":"32","hashOfConfig":"28"},{"size":832,"mtime":1613294965342,"results":"33","hashOfConfig":"28"},{"size":670,"mtime":1611754526553,"results":"34","hashOfConfig":"28"},{"size":1010,"mtime":1612455532780,"results":"35","hashOfConfig":"28"},{"size":1411,"mtime":1613140201065,"results":"36","hashOfConfig":"28"},{"size":480,"mtime":1613140901180,"results":"37","hashOfConfig":"28"},{"size":1897,"mtime":1613140201064,"results":"38","hashOfConfig":"28"},{"size":3368,"mtime":1612445287302,"results":"39","hashOfConfig":"28"},{"size":251,"mtime":1611999801757,"results":"40","hashOfConfig":"28"},{"size":2576,"mtime":1612011101272,"results":"41","hashOfConfig":"28"},{"size":134,"mtime":1611926686508,"results":"42","hashOfConfig":"28"},{"size":5002,"mtime":1612672781959,"results":"43","hashOfConfig":"28"},{"size":384,"mtime":1612002898812,"results":"44","hashOfConfig":"28"},{"size":829,"mtime":1613140201064,"results":"45","hashOfConfig":"28"},{"size":3136,"mtime":1612078523589,"results":"46","hashOfConfig":"28"},{"size":384,"mtime":1612076648252,"results":"47","hashOfConfig":"28"},{"size":1932,"mtime":1612080199455,"results":"48","hashOfConfig":"28"},{"size":5592,"mtime":1613142292408,"results":"49","hashOfConfig":"28"},{"size":554,"mtime":1613140481601,"results":"50","hashOfConfig":"28"},{"size":1444,"mtime":1613120197836,"results":"51","hashOfConfig":"28"},{"size":217,"mtime":1613120134303,"results":"52","hashOfConfig":"28"},{"size":296,"mtime":1613544217384,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1rbe0bv",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\index.js",[],["114","115"],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\App.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Navbar\\Navbar.js",["116","117"],"import { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {Link,useLocation,useHistory} from 'react-router-dom';\r\nimport decode from 'jwt-decode';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\n\r\nconst Navbar = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const [user,setuser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    var pathname = window.location.pathname;\r\n\r\n    var path = pathname === '/' ? 'home' : pathname.substr(1) \r\n    const [active,setActive] = useState(path);\r\n\r\n    const logout = () => {\r\n        setuser(null);\r\n        localStorage.clear();\r\n        history.push('/auth');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n    \r\n        if (token) {\r\n          const decodedToken = decode(token);\r\n    \r\n          if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        pathname = window.location.pathname;\r\n        path = pathname === '/' ? 'home' : pathname.substr(1) \r\n        setActive(path)\r\n        setuser(JSON.parse(localStorage.getItem('user')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <AppBar className={classes.appBar} position=\"static\" >\r\n            <BugReportIcon className={classes.icon} color=\"secondary\" />\r\n            <Typography className={classes.heading} component={Link} to=\"/\" marginLeft=\"50\" variant=\"h4\" color={active==='home' ? 'secondary' : 'inherit'} >\r\n                Bug Tracker\r\n            </Typography>\r\n            <div className={classes.employes} >\r\n               <Typography component={Link} to=\"/employe\" className={classes.heading} variant=\"h5\" color={active==='employe' ? 'secondary' : 'inherit'} >Employes</Typography>\r\n               <Typography component={Link} to=\"/todos\" className={classes.todos} variant=\"h5\" color={active==='todos' ? 'secondary' : 'inherit'} >Todos</Typography>\r\n            </div>\r\n            <Toolbar className={classes.toolbar} >\r\n            {\r\n                user ? (\r\n                    <div className={classes.profile}>\r\n                      <Typography className={classes.userName} variant=\"h6\">{user?.user.firstname}</Typography>\r\n                      <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                    </div>\r\n                ):(\r\n                    <div  >\r\n                       <Typography component={Link} to=\"/auth\" className={classes.heading} variant=\"h5\" color={active==='auth' ? 'secondary' : 'inherit'} >Sign In</Typography>\r\n                    </div>\r\n                )\r\n            }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Home\\Home.js",["118"],"import React,{useEffect, useState} from 'react';\r\nimport {Paper,Table,TableCell,TableHead,TableBody,TableRow, Typography,Button, Dialog, DialogTitle, DialogContent, DialogActions,InputLabel,MenuItem,Select,FormControl} from '@material-ui/core';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport useStyles from './styles'\r\nimport {getProjects} from '../../api/project';\r\nimport Input from '../Auth/input';\r\nimport {createProject} from '../../api/project';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [projects,setProjects] = useState([]);\r\n\r\n    const [User,setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const [data,setData] = useState({ title:'',status:'',priority:'',details:'' ,user:null});\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getProjects()\r\n        .then((res) => {\r\n            const proj = res.data.filter(pro => pro.user === User.user.email) \r\n            setProjects(proj);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        setUser(JSON.parse(localStorage.getItem('user')));\r\n    },[])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(data);\r\n        data.user = User.user.email;\r\n        createProject(data)\r\n        .then((res) => {\r\n            setIsOpen(false);\r\n            console.log(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            setError('Project not been added,Try again')\r\n        })\r\n    }\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n          backgroundColor: theme.palette.common.black,\r\n          color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n          fontSize: 14,\r\n        },\r\n      }))(TableCell);\r\n      \r\n      const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n          '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        },\r\n      }))(TableRow);\r\n\r\n      if(!User) {\r\n          return(\r\n            <Redirect to=\"/auth\" />\r\n          )\r\n      }\r\n\r\n    return (\r\n        <>\r\n        {User ? (\r\n        <>\r\n            <Typography className={classes.heading} align=\"center\" variant=\"h3\" color=\"secondary\" >\r\n                Projects\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => setIsOpen(true)} >Add New Project</Button>\r\n            <Dialog open={isOpen} onClose={!isOpen} >\r\n                <DialogTitle className={classes.dialog} >Create New Project</DialogTitle>\r\n                <DialogContent >\r\n                    <form>\r\n                    <Input margin=\"normal\" name=\"Title\" label=\"Title\" handleChange={(e) => setData({ ...data,title:e.target.value})} autoFocus half/>\r\n                    <FormControl className={classes.formControl} >\r\n                       <InputLabel id=\"status\" >Status</InputLabel>\r\n                       <Select\r\n                          labelId=\"status\"\r\n                          id=\"status\"\r\n                          value={data.status}\r\n                          onChange={(e) => setData({...data, status:e.target.value})}\r\n                        >\r\n                          <MenuItem value=\"Open\">Open</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                       </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl} >\r\n                    <InputLabel id=\"priority\" >Priority</InputLabel>\r\n                       <Select\r\n                          labelId=\"priority\"\r\n                          id=\"priority\"\r\n                          value={data.priority}\r\n                          onChange={(e) => setData({...data, priority:e.target.value})}\r\n                        >\r\n                          <MenuItem value=\"Low\">Low</MenuItem>\r\n                          <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                          <MenuItem value=\"High\">High</MenuItem>\r\n                          <MenuItem value=\"Urgent\">Urgent</MenuItem>\r\n                       </Select>\r\n                    </FormControl>\r\n                    <Input margin=\"normal\" name=\"detail\" label=\"Details\" handleChange={(e) => setData({ ...data,details:e.target.value})} autoFocus half/>\r\n                    { error && <Alert severity=\"error\">{error}</Alert>}\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit} >Create</Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => setIsOpen(false)}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n        \r\n        ): null}\r\n        { projects.length===0 ? (\r\n        <Paper className={classes.root} >\r\n            <Typography align=\"center\" variant=\"h4\" >No Employes Yet, Start Adding Some!</Typography>\r\n        </Paper>\r\n        ) : (\r\n            <Paper className={classes.root} >\r\n            <Table >\r\n            <TableHead>\r\n                <TableRow  >\r\n                    <StyledTableCell><Typography  variant=\"h6\" >Project</Typography></StyledTableCell>\r\n                    <StyledTableCell ><Typography  variant=\"h6\" >Status</Typography></StyledTableCell>\r\n                    <StyledTableCell ><Typography  variant=\"h6\">Priority</Typography></StyledTableCell>\r\n                    <StyledTableCell ><Typography  variant=\"h6\">Tasks</Typography></StyledTableCell>\r\n                    <StyledTableCell><Typography  variant=\"h6\">Action</Typography></StyledTableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {projects ? projects.map(project => {\r\n                    return(\r\n                        <StyledTableRow>\r\n                            <StyledTableCell><Typography  >{project.title}</Typography></StyledTableCell>\r\n                            <StyledTableCell><Typography  >{project.status}</Typography></StyledTableCell>\r\n                            <StyledTableCell><Typography  >{project.priority}</Typography></StyledTableCell>\r\n                            <StyledTableCell><Typography  >{project.tasks.length}</Typography></StyledTableCell>\r\n                            <StyledTableCell ><Link to={ User ? (`/project/${project._id}`) : ('/auth') }>Details</Link></StyledTableCell>\r\n                        </StyledTableRow>\r\n                    );\r\n                } ) : null}\r\n            </TableBody>\r\n            </Table>\r\n        </Paper>\r\n        )}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Auth\\input.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\index.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\project.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Project.js",["119","120","121","122"],"import { Button, ButtonGroup, Link, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles'\r\nimport {getProject} from '../../api/project';\r\nimport Tasks from './Tasks/Tasks';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddTask from '../Modals/AddTasks/AddTask';\r\nimport UpdateProject from '../Modals/UpdateProject/UpdateProject';\r\nimport DeleteProject from '../Modals/DeleteProject/DeleteProject';\r\n \r\nconst Project = (props) => {\r\n    const classes = useStyles();\r\n    const [project,setProject] = useState({tasks:[]});\r\n    const {id} = props.match.params;\r\n\r\n    const [showAddTask,setShowaddTask] = useState(false);\r\n    const [open,setOpen] = useState(false);\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [showUpdateProject,setShowUpdateProject] = useState(false);\r\n    const [showDeleteProject,setShowDeleteProject] = useState(false);\r\n    \r\n    const toggle = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProject(id)\r\n        .then((res) => {\r\n            console.log(res)\r\n            setProject(res.data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className={classes.root} >\r\n        <Typography variant=\"h3\" color=\"secondary\" >\r\n            {project.title}\r\n        </Typography>\r\n        <div className=\"dropdown-toggler flex v-center pointer\" className={classes.dropdown} onClick={toggle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n            </svg>\r\n        </div>\r\n        { open ? (\r\n            <div className={classes.toggler} >\r\n                <ButtonGroup orientation=\"vertical\" color=\"primary\" aria-label=\"vertical outlined primary button group\" >\r\n                <Button size=\"small\" startIcon={<AddIcon />} onClick={() => setShowaddTask(!showAddTask)} >Add Task</Button>\r\n                <Button size=\"small\" startIcon={<EditIcon />} onClick={() => setShowUpdateProject(!showUpdateProject)} >Edit Project</Button>\r\n                <Button size=\"small\" startIcon={<DeleteIcon/>} onClick={() => setShowDeleteProject(!showDeleteProject)} >Delete Project</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        ) : null }\r\n        { showAddTask && <AddTask id={id} project={project.title} user={user} /> }\r\n        { showUpdateProject && <UpdateProject id={id} /> }\r\n        { showDeleteProject && <DeleteProject id={id} /> }\r\n        <div className=\"project-details\">\r\n            <span className=\"tag\">Status: {project.status}</span>\r\n            <span className=\"tag\">Priority: {project.priority}</span>\r\n            <p><Typography variant=\"h6\" >{project.details}</Typography></p>\r\n        </div>\r\n        { project.tasks.length===0 ? (\r\n            <Typography align=\"center\" variant=\"h5\" >Project has no tickets</Typography>\r\n        ): <Tasks tasks={project.tasks} /> }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Project;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Tasks\\Tasks.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\ProjectDetails\\Tasks\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\AddTasks\\AddTask.js",["123"],"import { Dialog, MenuItem,DialogTitle,DialogContent,FormControl,InputLabel,Select,DialogActions,Button } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport useStyles from './styles';\r\nimport Input from '../../Auth/input';\r\nimport {CreateTask} from '../../../api/task';\r\n\r\nconst AddTask = ({id,project,user}) => {\r\n\r\n    const classes = useStyles();\r\n    const [isOpen,setIsOpen] = useState(true);\r\n    const [data,setData] = useState({id:id,project:project,reporter:user.user.firstname , title:'',status:'',priority:'',source:'',AssignedTo:'',details:'' });\r\n    const [User,setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n\r\n    const handleSubmit = () => {\r\n        CreateTask(data)\r\n        .then((res) => {\r\n            console.log(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        setIsOpen(false)\r\n    }\r\n\r\n    return(\r\n        <Dialog open={isOpen} onClose={!isOpen} >\r\n                <DialogTitle className={classes.dialog} >Create New Task</DialogTitle>\r\n                <DialogContent >\r\n                    <Input margin=\"normal\" name=\"Title\" label=\"Title\" handleChange={(e) => setData({ ...data,title:e.target.value})} autoFocus half/>\r\n                    <FormControl className={classes.formControl} >\r\n                       <InputLabel id=\"status\" >Status</InputLabel>\r\n                       <Select\r\n                          labelId=\"status\"\r\n                          id=\"status\"\r\n                          value={data.status}\r\n                          onChange={(e) => setData({...data, status:e.target.value})}\r\n                        >\r\n                          <MenuItem value=\"Open\">Open</MenuItem>\r\n                          <MenuItem value=\"On Progress\">On Progress</MenuItem>\r\n                          <MenuItem value=\"Pending\" >Pending</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                       </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl} >\r\n                    <InputLabel id=\"priority\" >Priority</InputLabel>\r\n                       <Select\r\n                          labelId=\"priority\"\r\n                          id=\"priority\"\r\n                          value={data.priority}\r\n                          onChange={(e) => setData({...data, priority:e.target.value})}\r\n                        >\r\n                          <MenuItem value=\"Low\">Low</MenuItem>\r\n                          <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                          <MenuItem value=\"High\">High</MenuItem>\r\n                          <MenuItem value=\"Urgent\">Urgent</MenuItem>\r\n                       </Select>                  \r\n                    </FormControl>\r\n                    <FormControl  className={classes.formControl}>\r\n                    <InputLabel id=\"source\" >Source</InputLabel>\r\n                       <Select\r\n                          labelId=\"source\"\r\n                          id=\"source\"\r\n                          value={data.source}\r\n                          onChange={(e) => setData({...data, source:e.target.value})}\r\n                        >\r\n                          <MenuItem value=\"In-House\">In-House</MenuItem>\r\n                          <MenuItem value=\"Alpha Tester\">Alpha Tester</MenuItem>\r\n                          <MenuItem value=\"Beta Tester\">Beta Tester</MenuItem>\r\n                          <MenuItem value=\"Client\">Client</MenuItem>\r\n                          <MenuItem value=\"Support\">Support</MenuItem>\r\n                       </Select>\r\n                    </FormControl>\r\n                    <FormControl  className={classes.formControl}>\r\n                    <InputLabel id=\"AssignedTo\" >Assigned To</InputLabel>\r\n                       <Select\r\n                          labelId=\"AssignedTo\"\r\n                          id=\"AssignedTo\"\r\n                          value={data.AssignedTo}\r\n                          onChange={(e) => setData({...data, AssignedTo:e.target.value})}\r\n                        >\r\n                          {User.user.employes.map((employe) => {\r\n                              return (\r\n                                  <MenuItem value={employe.name} >{employe.name}</MenuItem>\r\n                              )\r\n                          })}\r\n                       </Select>\r\n                    </FormControl>\r\n                    <Input margin=\"normal\" name=\"detail\" label=\"Details\" handleChange={(e) => setData({ ...data,details:e.target.value})} autoFocus half/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit} >Create</Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => setIsOpen(false)}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n    )\r\n}\r\n\r\nexport default AddTask;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\AddTasks\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\api\\task.js",[],["124","125"],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\UpdateProject\\UpdateProject.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\UpdateProject\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Modals\\DeleteProject\\DeleteProject.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Employes\\Employe.js",["126","127","128"],"import React, { useState,useEffect } from 'react' \r\nimport {Table,TableBody,TableHead,TableRow,TableCell, Paper, Typography, Button,Fab,DialogActions,DialogContent,DialogTitle,Dialog} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Input from '../Auth/input'\r\nimport {CreateEmploye,DeleteEmploye} from '../../api/index';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Employe = () => {\r\n    const classes = useStyles();\r\n    const [User,setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [employes,setEmployes] = useState(User === null ? [] : User.user.employes);\r\n    const [isOpen,setIsOpen] = useState(false);\r\n    const [data,setData] = useState({email:'' , name:'',id:''})\r\n\r\n    const handleDelete = (email) => {\r\n        DeleteEmploye({id:User.user._id ,email:email })\r\n        .then(() => {\r\n            console.log('Employe Deleted');\r\n            const newUser = User.user.employes.filter((employe) => employe.email !== email)\r\n            User.user.employes = newUser;\r\n            localStorage.setItem('user',JSON.stringify(User));\r\n        })        \r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        data.id=User.user._id\r\n        console.log(data);\r\n        CreateEmploye(data)\r\n        .then((res) => {\r\n            console.log(res);\r\n            User.user.employes.push({email:data.email,name:data.name});\r\n            localStorage.setItem('user',JSON.stringify(User));\r\n            setIsOpen(false);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n        head: {\r\n          backgroundColor: theme.palette.common.black,\r\n          color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n          fontSize: 14,\r\n        },\r\n    }))(TableCell);\r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n          '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        },\r\n    }))(TableRow);\r\n\r\n    if(!User) {\r\n        return(\r\n          <Redirect to=\"/auth\" />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            employes.length === 0 ? (\r\n                <Paper className={classes.root} >\r\n                    <Typography align=\"center\" variant=\"h4\" >No Employes Yet, Start Adding Some!</Typography>\r\n                    <div className={classes.button} align=\"center\" >\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => setIsOpen(true)} >Add Employe</Button>\r\n                    </div>\r\n                </Paper>\r\n            ) : (\r\n        <>\r\n        <Typography align=\"center\" variant=\"h3\" color=\"secondary\" className={classes.title} >Employes</Typography>\r\n        <div className={classes.add} >\r\n        <Button onClick={() => setIsOpen(true)} >\r\n            <Fab size=\"large\" color=\"secondary\" aria-label=\"add\" className={classes.margin}>\r\n                <AddIcon />\r\n            </Fab>\r\n        </Button>\r\n        </div>\r\n        <Paper className={classes.root} >\r\n            <Table >\r\n            <TableHead>\r\n                <TableRow  >\r\n                    <StyledTableCell><Typography  variant=\"h6\" >Employe Email</Typography></StyledTableCell>\r\n                    <StyledTableCell ><Typography  variant=\"h6\" >Employe Name</Typography></StyledTableCell>\r\n                    <StyledTableCell><Typography  variant=\"h6\">Action</Typography></StyledTableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {employes ? employes.map(employe => {\r\n                    return(\r\n                        <StyledTableRow>\r\n                            <StyledTableCell><Typography  >{employe.email}</Typography></StyledTableCell>\r\n                            <StyledTableCell><Typography  >{employe.name}</Typography></StyledTableCell>\r\n                            <StyledTableCell>\r\n                                <Button onClick={() => handleDelete(employe.email)} >\r\n                                    <DeleteForeverIcon/>\r\n                                </Button>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    );\r\n                } ) : null}\r\n            </TableBody>\r\n            </Table>\r\n        </Paper>\r\n        </>)\r\n        }\r\n        {isOpen && (\r\n            <Dialog open={isOpen} onClose={!isOpen} >\r\n             <DialogTitle className={classes.dialog} >Add Employe</DialogTitle>\r\n             <DialogContent >\r\n                 <Input helperText=\"Enter Registered Email Address of User\" margin=\"normal\" name=\"email\" label=\"email\" handleChange={(e) => setData({ ...data,email:e.target.value})} autoFocus/>\r\n                 <Input helperText=\"Enter Registered Name of User\" margin=\"normal\" name=\"name\" label=\"name\" handleChange={(e) => setData({ ...data,name:e.target.value})} autoFocus/>\r\n             </DialogContent>\r\n             <DialogActions>\r\n                 <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit} >Create</Button>\r\n                 <Button variant=\"outlined\" color=\"secondary\" onClick={() => setIsOpen(false)}>\r\n                     Close\r\n                 </Button>\r\n             </DialogActions>\r\n            </Dialog>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employe;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Employes\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Todos\\Todos.js",["129","130"],"import React, { useEffect, useState } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getProjects} from '../../api/project'\r\nimport {Typography,Paper} from '@material-ui/core'\r\nimport useStyles from './styles';\r\nimport Tasks from '../ProjectDetails/Tasks/Tasks';\r\n\r\nconst Todos = () => {\r\n\r\n    const [User,setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [todos,setTodos] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getProjects()\r\n        .then(({data}) => {\r\n            console.log(data);\r\n            let todos = [];\r\n            data.forEach(element => {\r\n                element.tasks.forEach(task => {\r\n                    if(task.assignee.name === User.user.firstname+ ' ' +User.user.lastname ){\r\n                        todos.push(task);\r\n                    }\r\n                })\r\n            });\r\n            setTodos(todos);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    if(!User){\r\n        return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { todos.length > 0 ? (\r\n            <Tasks tasks={todos} />\r\n        ): (\r\n            <Paper className={classes.root} >\r\n                <Typography align=\"center\" variant=\"h4\" >Congrats No Todos, Enjoy The Day</Typography>\r\n            </Paper>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todos;","C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Todos\\styles.js",[],"C:\\Users\\Prateek\\Desktop\\Projects\\BugTracker\\client\\src\\components\\Chat\\Chat.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":34,"column":20,"nodeType":"137","endLine":34,"endColumn":44},{"ruleId":"135","severity":1,"message":"138","line":35,"column":16,"nodeType":"139","endLine":35,"endColumn":62},{"ruleId":"135","severity":1,"message":"140","line":30,"column":7,"nodeType":"141","endLine":30,"endColumn":9,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":31,"nodeType":"145","messageId":"146","endLine":1,"endColumn":35},{"ruleId":"143","severity":1,"message":"147","line":20,"column":17,"nodeType":"145","messageId":"146","endLine":20,"endColumn":24},{"ruleId":"135","severity":1,"message":"148","line":37,"column":7,"nodeType":"141","endLine":37,"endColumn":9,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":44,"column":65,"nodeType":"152","endLine":44,"endColumn":93},{"ruleId":"143","severity":1,"message":"147","line":12,"column":17,"nodeType":"145","messageId":"146","endLine":12,"endColumn":24},{"ruleId":"131","replacedBy":"153"},{"ruleId":"133","replacedBy":"154"},{"ruleId":"143","severity":1,"message":"155","line":1,"column":26,"nodeType":"145","messageId":"146","endLine":1,"endColumn":35},{"ruleId":"143","severity":1,"message":"147","line":13,"column":17,"nodeType":"145","messageId":"146","endLine":13,"endColumn":24},{"ruleId":"143","severity":1,"message":"156","line":14,"column":21,"nodeType":"145","messageId":"146","endLine":14,"endColumn":32},{"ruleId":"143","severity":1,"message":"147","line":10,"column":17,"nodeType":"145","messageId":"146","endLine":10,"endColumn":24},{"ruleId":"135","severity":1,"message":"157","line":31,"column":7,"nodeType":"141","endLine":31,"endColumn":9,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","Assignments to the 'pathname' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","React Hook useEffect has a missing dependency: 'User.user.email'. Either include it or remove the dependency array.","ArrayExpression",["161"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["162"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["159"],["160"],"'useEffect' is defined but never used.","'setEmployes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'User.user.firstname' and 'User.user.lastname'. Either include them or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [User.user.email]",{"range":"170","text":"171"},"Update the dependencies array to be: [id]",{"range":"172","text":"173"},"Update the dependencies array to be: [User.user.firstname, User.user.lastname]",{"range":"174","text":"175"},[1275,1277],"[User.user.email]",[1365,1367],"[id]",[1010,1012],"[User.user.firstname, User.user.lastname]"]